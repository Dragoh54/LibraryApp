// <auto-generated />
using System;
using LibraryApp.DomainModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LibraryApp.DataAccess.Migrations
{
    [DbContext(typeof(LibraryAppDbContext))]
    partial class LibraryAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LibraryApp.Entities.Models.AuthorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Surname")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c1d5a5e-8bdd-4ed5-896b-4d3ab5824fbe"),
                            BirthDate = new DateTime(1892, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Country = "United Kingdom",
                            Surname = "Tolkien"
                        },
                        new
                        {
                            Id = new Guid("6e676b9f-1245-4e2d-8af0-780db78c5a8c"),
                            BirthDate = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Country = "United Kingdom",
                            Surname = "Rowling"
                        },
                        new
                        {
                            Id = new Guid("e74425ce-b470-412d-88ed-09400af22d41"),
                            BirthDate = new DateTime(1948, 9, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Country = "United States",
                            Surname = "Martin"
                        },
                        new
                        {
                            Id = new Guid("fc89e677-a517-415d-a27c-f89b0389703d"),
                            BirthDate = new DateTime(1903, 6, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Country = "United Kingdom",
                            Surname = "Orwell"
                        },
                        new
                        {
                            Id = new Guid("a2846d86-be0d-4732-938f-c6541cf95838"),
                            BirthDate = new DateTime(1775, 12, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Country = "United Kingdom",
                            Surname = "Austen"
                        });
                });

            modelBuilder.Entity("LibraryApp.Entities.Models.BookEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("ReturnBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("675a623f-3f61-4918-9d81-76fbadcf312d"),
                            AuthorId = new Guid("3c1d5a5e-8bdd-4ed5-896b-4d3ab5824fbe"),
                            Description = "A fantasy novel by J.R.R. Tolkien.",
                            Genre = "Fantasy",
                            ISBN = "978-0261103573",
                            ReturnBy = new DateTime(2025, 1, 18, 23, 5, 22, 422, DateTimeKind.Utc).AddTicks(8473),
                            TakenAt = new DateTime(2024, 12, 19, 23, 5, 22, 422, DateTimeKind.Utc).AddTicks(8469),
                            Title = "The Hobbit",
                            UserId = new Guid("1e6520ca-897e-47dd-a74e-e7203f436fa0")
                        },
                        new
                        {
                            Id = new Guid("6b5ea3bf-f232-4aad-8a9a-5284b818ff2f"),
                            AuthorId = new Guid("6e676b9f-1245-4e2d-8af0-780db78c5a8c"),
                            Description = "The first book in the Harry Potter series by J.K. Rowling.",
                            Genre = "Fantasy",
                            ISBN = "978-0747532743",
                            ReturnBy = new DateTime(2025, 1, 13, 23, 5, 22, 422, DateTimeKind.Utc).AddTicks(8478),
                            TakenAt = new DateTime(2024, 12, 24, 23, 5, 22, 422, DateTimeKind.Utc).AddTicks(8478),
                            Title = "Harry Potter and the Philosopher's Stone",
                            UserId = new Guid("1e6520ca-897e-47dd-a74e-e7203f436fa0")
                        },
                        new
                        {
                            Id = new Guid("6881d1ce-5541-4b84-ab19-80a02a91c70c"),
                            AuthorId = new Guid("e74425ce-b470-412d-88ed-09400af22d41"),
                            Description = "The first book in the A Song of Ice and Fire series by George R.R. Martin.",
                            Genre = "Fantasy",
                            ISBN = "978-0553103540",
                            ReturnBy = new DateTime(2025, 1, 3, 23, 5, 22, 422, DateTimeKind.Utc).AddTicks(8526),
                            TakenAt = new DateTime(2024, 12, 9, 23, 5, 22, 422, DateTimeKind.Utc).AddTicks(8525),
                            Title = "A Game of Thrones",
                            UserId = new Guid("2541e981-fdcc-4743-a6c2-0bf54cda6537")
                        },
                        new
                        {
                            Id = new Guid("8d681569-4465-4e72-82a1-1f15fccd1c2c"),
                            AuthorId = new Guid("fc89e677-a517-415d-a27c-f89b0389703d"),
                            Description = "A dystopian novel by George Orwell.",
                            Genre = "Dystopian",
                            ISBN = "978-0451524935",
                            ReturnBy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TakenAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "1984"
                        },
                        new
                        {
                            Id = new Guid("569fef52-d157-4a17-be86-5ff7e80b4d3e"),
                            AuthorId = new Guid("a2846d86-be0d-4732-938f-c6541cf95838"),
                            Description = "A classic novel by Jane Austen.",
                            Genre = "Classic",
                            ISBN = "978-0141439518",
                            ReturnBy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TakenAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = new Guid("066d6761-cfbe-45d5-8fca-9f5c7119f1b8"),
                            AuthorId = new Guid("3c1d5a5e-8bdd-4ed5-896b-4d3ab5824fbe"),
                            Description = "An epic high-fantasy novel by J.R.R. Tolkien.",
                            Genre = "Fantasy",
                            ISBN = "978-0261102385",
                            ReturnBy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TakenAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = new Guid("00bf7bcc-fdfb-4292-86ef-49f335bcc3c4"),
                            AuthorId = new Guid("6e676b9f-1245-4e2d-8af0-780db78c5a8c"),
                            Description = "The sixth book in the Harry Potter series by J.K. Rowling.",
                            Genre = "Fantasy",
                            ISBN = "978-0747581086",
                            ReturnBy = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TakenAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Harry Potter and the Half-Blood Prince"
                        });
                });

            modelBuilder.Entity("LibraryApp.Entities.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("WhenUsed")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("LibraryApp.Entities.Models.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e6520ca-897e-47dd-a74e-e7203f436fa0"),
                            Email = "booklover123@example.com",
                            Nickname = "booklover123",
                            PasswordHash = "$2a$11$II0LkJcm6/ct81LosKntfOsUWaD2k7PwOZo3VNBeKiu543gxzbQ5.",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("19936275-2f47-4dae-a6f2-0890b217f362"),
                            Email = "admin@example.com",
                            Nickname = "adminuser",
                            PasswordHash = "$2a$11$E.jEY9H59mOuNkmukl38IOVZL0XXnRL5J6rrEJQR5QAy9GGKPjD3y",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("2541e981-fdcc-4743-a6c2-0bf54cda6537"),
                            Email = "fan@example.com",
                            Nickname = "literaturefan",
                            PasswordHash = "$2a$11$qNm0y8uaRUH4.gOzrkM1/OdDTIbscB/IUBnmX6VsqfqsZO9EKYPYi",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("ada323cc-22ad-4197-bd32-1b4a598bee47"),
                            Email = "historybuff@example.com",
                            Nickname = "historybuff",
                            PasswordHash = "$2a$11$O4PYdy5jydcUs1LWBjnSiu8ztQp.7BK23NLORsIhThN87aXmGWgmS",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("a50471dc-9808-48f6-ae80-50731ff70e01"),
                            Email = "sciencegeek@example.com",
                            Nickname = "sciencegeek",
                            PasswordHash = "$2a$11$t9xdEu0peUQe/rJd69215O7Dv4U9qqljehGtK8gKFHY9yc.tfFiDC",
                            Role = 1
                        });
                });

            modelBuilder.Entity("LibraryApp.Entities.Models.BookEntity", b =>
                {
                    b.HasOne("LibraryApp.Entities.Models.AuthorEntity", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Entities.Models.UserEntity", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId");

                    b.Navigation("Author");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryApp.Entities.Models.AuthorEntity", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryApp.Entities.Models.UserEntity", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
